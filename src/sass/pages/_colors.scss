@use './../utilities' as *;

// Example: Set your color variables

$color--gray: #888888;
$color--blue: #3366ff;
$color--teal: #43e7f9;
$color--green: #5bd642;
$color--orange: #ffae18;
$color--red: #ff4732;

$colors: ();
$colors: map-merge(
  (
    'gray': $color--gray,
    'blue': $color--blue,
    'teal': $color--teal,
    'green': $color--green,
    'orange': $color--orange,
    'red': $color--red,
  ),
  $colors
);

$values: (100, 200, 300, 400, 500, 600, 700, 800, 900);

$color--interval: 7.6%;

@function createPalette($color) {
  $palette: (
    100: lighten($color, $color--interval * 4),
    200: lighten($color, $color--interval * 3),
    300: lighten($color, $color--interval * 2),
    400: lighten($color, $color--interval),
    500: $color,
    600: darken($color, $color--interval),
    700: darken($color, $color--interval * 2),
    800: darken($color, $color--interval * 3),
    900: darken($color, $color--interval * 4),
  );
  @return $palette;
}

$palette--gray: createPalette(#888888);
$palette--blue: createPalette($color--blue);
$palette--teal: createPalette($color--teal);
$palette--green: createPalette($color--green);
$palette--orange: createPalette($color--orange);
$palette--red: createPalette($color--red);

$palettes: ();
$palettes: map-merge(
  (
    'gray': $palette--gray,
    'blue': $palette--blue,
    'teal': $palette--teal,
    'green': $palette--green,
    'orange': $palette--orange,
    'red': $palette--red,
  ),
  $palettes
);
@each $colorName, $palette in $palettes {
  @each $key, $value in $palette {
    .bg--#{$colorName} {
      &-#{$key} {
        background-color: #{$value};
      }
    }
  }
}

@each $name, $color in $color-grays {
  .color--gray {
    &-#{$name} {
      @include dynamicColor($color);
    }
  }
}

@each $name, $color in $color-colors {
  .color--color {
    &-#{$name} {
      @include dynamicColor($color);
    }
  }
}
